type User {
  id: ID! @id @unique
  username: String! @unique
  password: String!
  email: String! @unique
  role: String! @default(value: "USER")
  verified: Boolean! @default(value: false)
  banned: Boolean! @default(value: true)
  hashtags: [Hashtag!]@relation(name:"Followed", onDelete:SET_NULL)
  createdHashtags:[Hashtag!] @relation(name:"Creator", onDelete:SET_NULL)
  stories: [Story!] @relation(name:"Author", onDelete:SET_NULL)
  device: [Device!]
  language:String! @default(value: "en-GB")
  feedbacks: [Feedback!]!
}

type Hashtag {
  id: ID! @id @unique
  title: String! @unique
  stories: [Story!]! @relation(name:"Hashtags", onDelete:SET_NULL)
  moderator: [User!] @relation(name:"Moderator", onDelete:SET_NULL)
  followedBy:[User!] @relation(name:"Followed", onDelete:SET_NULL)
  addedBy: User! @relation(name:"Creator", onDelete:SET_NULL)
}

type Story {
  id: ID! @id @unique
  body: String!
  postedBy: User!  @relation(name:"Author", onDelete:SET_NULL)
  hashtags: [Hashtag!]! @relation(name:"Hashtags", onDelete:SET_NULL)
  suspended: Boolean! @default(value: false)
  likes: [Like!]  @relation(name:"Likes", onDelete:CASCADE)
  comments: [Comment!] @relation(name:"Comment", onDelete:CASCADE)
  reports: [StoryReport!] @relation(name:"Report", onDelete:CASCADE)
  notifications:[Notification!]! @relation(name:"Notification", onDelete:CASCADE)
}

type Feedback {
  id: ID! @id @unique
  topic: String!
  description: String!
  sentBy: User
}

type StoryReport {
  id: ID! @id @unique
  story: Story! @relation(name:"Report", onDelete:SET_NULL)
  reportedBy: User!
  reason: String! 
}

type Message {
  id: ID! @id @unique
  body: String!
  sentBy: User!
}

type Video {
  id: ID! @id @unique
  link: String!
  sentBy: User!
}

type Notification {
  id: ID! @id @unique
  story: Story! @relation(name:"Notification", onDelete:SET_NULL)
  sender: User! @relation(name: "Sender")
  code: String!
  seen:Boolean! @default(value: false)
}

type Comment {
  id: ID! @id @unique
  body: String!
  story: Story! @relation(name:"Comment", onDelete:SET_NULL)
  commentedBy: User! 
}

type Like {
  id: ID! @id @unique
  story: Story! @relation(name:"Likes", onDelete:SET_NULL)
  likedBy: User!
}

type Device {
  id: ID! @id @unique
  browser: String!
  ip: String!
  os: String!
  country: String!
  language: String!
  zip: String!
  account: User!
}
